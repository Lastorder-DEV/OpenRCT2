language: c

before_install:
    # Android jobs are triggered from cron and overwrite `before_script` part
    - if [[ "$TRAVIS_EVENT_TYPE" == "cron" ]] ; then echo Exiting early from cron job ; exit 0 ; fi
    - if [[ "z$OPENRCT2_ORG_TOKEN" != "z" && "$TRAVIS_PULL_REQUEST" == "false" && ("${TRAVIS_BRANCH}" =~ ^(develop|push/) || "z${TRAVIS_TAG}" != "z") ]] ; then
      echo "This build will get pushed!" ; echo "tag = ${TRAVIS_TAG}" ; echo "branch = ${TRAVIS_BRANCH}" ;
      fi
    - if [[ $TRAVIS_REPO_SLUG == "OpenRCT2/OpenRCT2" ]] && [[ $TRAVIS_PULL_REQUEST != "false" ]] && [[ $TRAVIS_BRANCH == "master" ]]; then echo "Pull requests to master branch are not allowed!" ; exit 1 ; fi
    - if [[ $TRAVIS_OS_NAME == "linux" ]]; then bash scripts/linux/install.sh; export OPENRCT_MAKE_OPTS="-k 10 all openrct2-cli" ; fi
    - if [[ $TRAVIS_OS_NAME == "osx" ]]; then sudo gem install xcpretty-travis-formatter; fi

sudo: required
dist: trusty
env:
    global:
        - OPENRCT2_VERSION="0.1.2"

matrix:
    include:
        - os: linux
          if: type != cron
          services:
            - docker
          env:
            - OPENRCT2_CMAKE_OPTS="-G Ninja -DCMAKE_BUILD_TYPE=RelWithDebInfo -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=OpenRCT2 -DPORTABLE=ON -DDISABLE_RCT2_TESTS=on" TARGET=ubuntu_amd64
          after_success:
            # Android jobs are triggered from cron and overwrite `after_sucess` part
            - if [[ "$TRAVIS_EVENT_TYPE" == "cron" ]] ; then exit 0 ; fi
            - sudo chown -R $USER build
            - cd build
              # make install is done inside docker
            - mv OpenRCT2/bin/openrct2 OpenRCT2/ && mv OpenRCT2/bin/openrct2-cli OpenRCT2/ && mv OpenRCT2/bin/libopenrct2.so OpenRCT2/ && mv OpenRCT2/share/openrct2 OpenRCT2/data && mv OpenRCT2/share/doc/openrct2 OpenRCT2/doc && mv OpenRCT2/bin/libdiscord-rpc.so OpenRCT2/
            - rm -rf OpenRCT2/bin OpenRCT2/share # remove empty dirs
            - tar cvzf openrct2-linux.tar.gz OpenRCT2/
            - if [[ "z${TRAVIS_TAG}" != "z" ]] ; then
              export PUSH_BRANCH=master ;
              else export PUSH_BRANCH=$TRAVIS_BRANCH ; export FILENAME_PART=-${TRAVIS_BRANCH}-$(git rev-parse --short HEAD) ;
              fi
            - curl --progress-bar --upload-file openrct2-linux.tar.gz https://transfer.sh/openrct2-linux-x86_64.tar.gz -o link && cat link;
        - os: linux
          if: type != cron
          services:
            - docker
          env:
            - OPENRCT2_CMAKE_OPTS="-G Ninja -DFORCE32=ON -DBUILD_SHARED_LIBS=off -DCMAKE_INSTALL_PREFIX=OpenRCT2 -DDISABLE_RCT2_TESTS=on" TARGET=ubuntu_i686
          after_success:
            # Android jobs are triggered from cron and overwrite `after_sucess` part
            - if [[ "$TRAVIS_EVENT_TYPE" == "cron" ]] ; then exit 0 ; fi
            - sudo chown -R $USER build
            - cd build
              # make install is done inside docker
            - mv OpenRCT2/bin/openrct2 OpenRCT2/ && mv OpenRCT2/share/openrct2 OpenRCT2/data && mv OpenRCT2/share/doc/openrct2 OpenRCT2/doc
            - rm -rf OpenRCT2/bin OpenRCT2/share # remove empty dirs
            - tar cvzf openrct2-linux.tar.gz OpenRCT2/
            - if [[ "z${TRAVIS_TAG}" != "z" ]] ; then
              export PUSH_BRANCH=master ;
              else export PUSH_BRANCH=$TRAVIS_BRANCH ; export FILENAME_PART=-${TRAVIS_BRANCH}-$(git rev-parse --short HEAD) ;
              fi
            - curl --progress-bar --upload-file openrct2-linux.tar.gz https://transfer.sh/openrct2-linux-i686.tar.gz -o link && cat link;
        - os: linux
          if: type != cron
          env: OPENRCT2_CMAKE_OPTS="-G Ninja -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DBUILD_SHARED_LIBS=ON -DDISABLE_RCT2_TESTS=on" TARGET=ubuntu_amd64
        - os: linux
          if: type != cron
          env: OPENRCT2_CMAKE_OPTS="-G Ninja -DCMAKE_TOOLCHAIN_FILE=../CMakeLists_mingw.txt -DFORCE32=on -DBUILD_SHARED_LIBS=ON -DDISABLE_RCT2_TESTS=on" TARGET=windows
        - os: linux
          if: type != cron
          env: TARGET=docker64 OPENRCT2_CMAKE_OPTS="-G Ninja -DDISABLE_TTF=ON -DCMAKE_BUILD_TYPE=release -DBUILD_SHARED_LIBS=ON -DDISABLE_RCT2_TESTS=on"
          services:
            - docker
        - os: linux
          if: type != cron
          env: OPENRCT2_CMAKE_OPTS="-G Ninja -DDISABLE_NETWORK=ON -DDISABLE_HTTP_TWITCH=ON -DBUILD_SHARED_LIBS=ON -DDISABLE_RCT2_TESTS=on" TARGET=docker64
          services:
            - docker
        - os: linux
          if: type != cron
          env: OPENRCT2_CMAKE_OPTS="-G Ninja -DDISABLE_OPENGL=ON -DBUILD_SHARED_LIBS=ON -DDISABLE_RCT2_TESTS=on" TARGET=docker64
          services:
            - docker
        - os: osx
          if: type != cron
          osx_image: xcode8.3
          after_success:
            # Android jobs are triggered from cron and overwrite `after_sucess` part
            - if [[ "$TRAVIS_EVENT_TYPE" == "cron" ]] ; then exit 0 ; fi
            - cd build/Release
            - zip -r openrct2-macos.zip OpenRCT2.app
            - if [[ "z${TRAVIS_TAG}" != "z" ]] ; then
              export PUSH_BRANCH=master ;
              else export PUSH_BRANCH=$TRAVIS_BRANCH ; export FILENAME_PART=-${TRAVIS_BRANCH}-$(git rev-parse --short HEAD) ;
              fi
            - curl --progress-bar --upload-file openrct2-macos.zip https://transfer.sh/openrct2-macos.zip -o link && cat link;
        - os: linux
          if: type = cron
          language: android
          dist: precise
          before_install: []
          addons:
            apt:
              sources:
                - ubuntu-toolchain-r-test
              packages:
              - libstdc++6-4.7-dev
          android:
            components:
              - build-tools-25.0.2
          jdk: oraclejdk8
          before_script:
            # Only run Android jobs when triggered from cron or on tag, otherwise skip
            - if [[ "$TRAVIS_EVENT_TYPE" != "cron" ]] && [[ "z${TRAVIS_TAG}" == "z" ]] ; then exit 0 ; fi
            - pushd ~
            - wget https://dl.google.com/android/repository/sdk-tools-linux-3859397.zip
            - unzip -qo sdk-tools-linux-3859397.zip
            - rm -Rf "$ANDROID_HOME/tools"
            - mv tools "$ANDROID_HOME/tools"
            - popd
            - 'echo "count=0" >  ~/.android/repositories.cfg'
            - '"$ANDROID_HOME/tools/bin/sdkmanager" --list'
            - 'echo y | "$ANDROID_HOME/tools/bin/sdkmanager" platform-tools'
            - 'echo y | "$ANDROID_HOME/tools/bin/sdkmanager" "platforms;android-25"'
            - 'echo y | "$ANDROID_HOME/tools/bin/sdkmanager" "cmake;3.6.4111459"'
            - '"$ANDROID_HOME/tools/bin/sdkmanager" ndk-bundle'
            - '"$ANDROID_HOME/tools/bin/sdkmanager" --list'
            - 'export ANDROID_NDK_HOME="$ANDROID_HOME/ndk-bundle"'
            - 'cd src/openrct2-android'
            - TERM=dumb # Makes Gradle use 'boring' output
          script:
            # Only run Android jobs when triggered from cron or on tag, otherwise skip
            - if [[ "$TRAVIS_EVENT_TYPE" != "cron" ]] && [[ "z${TRAVIS_TAG}" == "z" ]] ; then exit 0 ; fi
            - './gradlew app:assemblePR'
          after_success:
            # Only run Android jobs when triggered from cron or on tag, otherwise skip
            - if [[ "$TRAVIS_EVENT_TYPE" != "cron" ]] && [[ "z${TRAVIS_TAG}" == "z" ]] ; then exit 0 ; fi
            - curl --progress-bar --upload-file app/build/outputs/apk/app-arm-pr.apk https://transfer.sh/openrct2-android-arm.apk -o link && cat link
            - curl --progress-bar --upload-file app/build/outputs/apk/app-x86-pr.apk https://transfer.sh/openrct2-android-x86.apk -o link && cat link
            - if [[ "z${TRAVIS_TAG}" != "z" ]] ; then
              export PUSH_BRANCH=master ;
              else export PUSH_BRANCH=$TRAVIS_BRANCH ; export FILENAME_PART=-${TRAVIS_BRANCH}-$(git rev-parse --short HEAD) ;
              fi

script:
    # Android jobs are triggered from cron and overwrite `script` part
    - if [[ "$TRAVIS_EVENT_TYPE" == "cron" ]] ; then exit 0 ; fi
    - if [[ $TRAVIS_OS_NAME == "linux" ]]; then bash scripts/linux/build.sh ; fi
    - if [[ $TRAVIS_OS_NAME == "osx" ]]; then set -o pipefail && xcodebuild | xcpretty -f `xcpretty-travis-formatter`; fi

notifications:
    on_failure: change
    on_success: change

cache:
    directories:
        - .cache
    apt: true
